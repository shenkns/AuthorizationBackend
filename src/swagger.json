{
    "openapi": "3.1.0",
    "info": {
      "title": "Authorization backend",
      "version": "1.0.0",
      "description": "Authorization backend server app for games.\n"
    },
    "servers": [
      {
        "url": "https://cerulean-dolphin-sari.cyclic.app/"
      },
      {
        "url": "localhost:5000/"
      }
    ],
    "paths": {
      "/user/auth/sign-in-guest": {
        "post": {
          "tags": [
            "Authorization"
          ],
          "summary": "Create user account",
          "description": "Create user account",
          "operationId": "sign-up",
          "requestBody": {
            "description": "User name, password and email",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/signInGuest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful signed in as guest"
            },
            "400": {
              "description": "No deviceId field"
            },
            "403": {
              "description": "No access, can't sign in to not guest account with device ID"
            }
          }
        }
      },
      "/user/auth/sign-up": {
        "post": {
          "tags": [
            "Authorization"
          ],
          "summary": "Create user account",
          "description": "Create user account",
          "operationId": "sign-up",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "API key token",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/authorizationSchema"
              }
            }
          ],
          "requestBody": {
            "description": "User name, password and email",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/signUp"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful signed up"
            },
            "400": {
              "description": "No name or email or password or deviceId field in request"
            },
            "401": {
              "description": "No access"
            },
            "403": {
              "description": "No Authorization header | Attempt from not owning device"
            },
            "404": {
              "description": "Current guest user session not found"
            },
            "409": {
              "description": "Email already used | Account already signed up"
            }
          }
        }
      },
      "/user/auth/sign-in-email": {
        "post": {
          "tags": [
            "Authorization"
          ],
          "summary": "Sign In using email and password",
          "description": "Sign In using email and password",
          "operationId": "sign-in-email",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "API key token",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/authorizationSchema"
              }
            }
          ],
          "requestBody": {
            "description": "User email and password",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/signInEmail"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful signed in"
            },
            "400": {
              "description": "No email or password field in request"
            },
            "401": {
              "description": "No access | Invalid password"
            },
            "403": {
              "description": "No Authorization header | No access, can't sign in to guest account with email"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/user/auth/sign-in-id": {
        "post": {
          "tags": [
            "Authorization"
          ],
          "summary": "Sign In using id and password",
          "description": "Sign In id email and password",
          "operationId": "sign-in-id",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "API key token",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/authorizationSchema"
              }
            }
          ],
          "requestBody": {
            "description": "User id and password",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/signInId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful signed in"
            },
            "400": {
              "description": "No id or password field in request"
            },
            "401": {
              "description": "No access | Invalid password"
            },
            "403": {
              "description": "No Authorization header | No access, can't sign in to guest account with user ID"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/user/auth/reset-password": {
        "post": {
          "tags": [
            "Authorization"
          ],
          "summary": "Reset password",
          "description": "Reset password",
          "operationId": "reset-password",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "API key token",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/authorizationSchema"
              }
            }
          ],
          "requestBody": {
            "description": "User ID, Old Password, New Password",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/resetPassword"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Password successful changed"
            },
            "400": {
              "description": "No id or oldPassword or newPassword field in request"
            },
            "401": {
              "description": "No access | Invalid current password"
            },
            "403": {
              "description": "No Authorization header | You don't have permission to access | No access, can't reset password for guest account"
            },
            "409": {
              "description": "New password equals old"
            }
          }
        }
      },
      "/user/auth/sessions/get-sessions": {
        "get": {
          "tags": [
            "Authorization"
          ],
          "summary": "Get Session",
          "description": "Get Session",
          "operationId": "get-sessions",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "API key token",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/authorizationSchema"
              }
            }
          ],
          "requestBody": {
            "description": "Should be empty, all needed data in access token in header"
          },
          "required": true,
          "responses": {
            "200": {
              "description": "Sessions got"
            },
            "400": {
              "description": "No id field in JWT token header"
            },
            "401": {
              "description": "No authorization header"
            },
            "403": {
              "description": "No access, bad parser token | Invalid session"
            },
            "404": {
              "description": "User not found, invalid id in JWT token | User not found"
            }
          }
        }
      },
      "/user/auth/sessions/delete-session": {
        "post": {
          "tags": [
            "Authorization"
          ],
          "summary": "Delete Session",
          "description": "Delete Session",
          "operationId": "delete-session",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "API key token",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/authorizationSchema"
              }
            }
          ],
          "requestBody": {
            "description": "User ID",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/getName"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Session deleted"
            },
            "400": {
              "description": "No id field in JWT token header | No session field in request"
            },
            "401": {
              "description": "No authorization header"
            },
            "403": {
              "description": "No access, bad parser token | Invalid session"
            },
            "404": {
              "description": "User not found, invalid id in JWT token | User not found, invalid id | Deleting session not found"
            },
            "409": {
              "description": "Can't delete current session from itself"
            }
          }
        }
      },
      "/user/get-name": {
        "get": {
          "tags": [
            "User Info"
          ],
          "summary": "Get user name",
          "description": "Get user name",
          "operationId": "get-name",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "API key token",
              "required": false,
              "schema": {
                "$ref": "#/components/schemas/authorizationSchema"
              }
            }
          ],
          "requestBody": {
            "description": "User ID",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/getName"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Name got"
            },
            "400": {
              "description": "No id field in request"
            },
            "401": {
              "description": "No access"
            },
            "403": {
              "description": "No Authorization header"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
      "signInGuest": {
        "required": [
          "deviceId"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string"
          }
        }
      },
      "signUp": {
        "required": [
          "name",
          "password",
          "email",
          "deviceId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          }
        }
      },
      "signInEmail": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "signInId": {
        "required": [
          "id",
          "password"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "resetPassword": {
        "required": [
          "id",
          "oldPassword",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "oldPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "deleeteSession": {
        "required": [
          "session"
        ],
        "type": "object",
        "properties": {
          "session": {
            "type": "string"
          }
        }
      },
      "getName": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "authorizationSchema": {
        "type": "string",
        "example": "Bearer <YOUR_API_KEY_TOKEN>",
        "description": "JWT token storing user id and session"
      },
      "userSchema": {
        "required": [
          "name",
          "email",
          "password",
          "accountType",
          "deviceId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "accountType": {
            "type": "number"
          },
          "deviceId": {
            "type": "string"
          }
        }
      }
    }
  }
}